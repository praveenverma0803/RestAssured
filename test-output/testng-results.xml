<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-19T17:28:12Z" name="Suite" finished-at="2020-08-19T17:28:26Z" duration-ms="14031">
    <groups>
    </groups>
    <test started-at="2020-08-19T17:28:12Z" name="Test" finished-at="2020-08-19T17:28:26Z" duration-ms="14031">
      <class name="apipackage.TC002_PostRequest">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC002_PostRequest@38c5cc4c]" started-at="2020-08-19T17:28:19Z" name="logrecord" finished-at="2020-08-19T17:28:19Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="UserDetails()[pri:0, instance:apipackage.TC002_PostRequest@38c5cc4c]" started-at="2020-08-19T17:28:19Z" name="UserDetails" finished-at="2020-08-19T17:28:20Z" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserDetails -->
      </class> <!-- apipackage.TC002_PostRequest -->
      <class name="apipackage.TC001_GetRequest">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC001_GetRequest@78e94dcf]" started-at="2020-08-19T17:28:20Z" name="logrecord" finished-at="2020-08-19T17:28:20Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="UserDetails()[pri:0, instance:apipackage.TC001_GetRequest@78e94dcf]" started-at="2020-08-19T17:28:20Z" name="UserDetails" finished-at="2020-08-19T17:28:20Z" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserDetails -->
      </class> <!-- apipackage.TC001_GetRequest -->
      <class name="apipackage.TC_DataDrivenAPI">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:21Z" name="logrecord" finished-at="2020-08-19T17:28:21Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method is-config="true" signature="UserDetails()[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:21Z" name="UserDetails" finished-at="2020-08-19T17:28:21Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserDetails -->
        <test-method signature="TestData(java.lang.String, java.lang.String)[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:22Z" name="TestData" data-provider="exceluserdata" finished-at="2020-08-19T17:28:23Z" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lead]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestData -->
        <test-method signature="TestData(java.lang.String, java.lang.String)[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:23Z" name="TestData" data-provider="exceluserdata" finished-at="2020-08-19T17:28:23Z" duration-ms="791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PQR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TechLead]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestData -->
        <test-method signature="TestData(java.lang.String, java.lang.String)[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:23Z" name="TestData" data-provider="exceluserdata" finished-at="2020-08-19T17:28:24Z" duration-ms="749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[STU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Manager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestData -->
        <test-method signature="TestData(java.lang.String, java.lang.String)[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:24Z" name="TestData" data-provider="exceluserdata" finished-at="2020-08-19T17:28:25Z" duration-ms="717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EFG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SrManager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestData -->
        <test-method signature="TestData(java.lang.String, java.lang.String)[pri:0, instance:apipackage.TC_DataDrivenAPI@358ee631]" started-at="2020-08-19T17:28:25Z" name="TestData" data-provider="exceluserdata" finished-at="2020-08-19T17:28:26Z" duration-ms="717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GHI]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Director]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestData -->
      </class> <!-- apipackage.TC_DataDrivenAPI -->
      <class name="apipackage.TC003_HeaderResponse">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC003_HeaderResponse@233fe9b6]" started-at="2020-08-19T17:28:20Z" name="logrecord" finished-at="2020-08-19T17:28:20Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="HeaderResponse()[pri:0, instance:apipackage.TC003_HeaderResponse@233fe9b6]" started-at="2020-08-19T17:28:20Z" name="HeaderResponse" finished-at="2020-08-19T17:28:21Z" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HeaderResponse -->
      </class> <!-- apipackage.TC003_HeaderResponse -->
      <class name="apipackage.TC007_JsonFilePayload">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC007_JsonFilePayload@5bfa9431]" started-at="2020-08-19T17:28:12Z" name="logrecord" finished-at="2020-08-19T17:28:12Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="UserDetails()[pri:0, instance:apipackage.TC007_JsonFilePayload@5bfa9431]" started-at="2020-08-19T17:28:12Z" name="UserDetails" finished-at="2020-08-19T17:28:17Z" duration-ms="4943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserDetails -->
      </class> <!-- apipackage.TC007_JsonFilePayload -->
      <class name="apipackage.TC004_jsonresponse">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC004_jsonresponse@37918c79]" started-at="2020-08-19T17:28:20Z" name="logrecord" finished-at="2020-08-19T17:28:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="jsonresponse()[pri:0, instance:apipackage.TC004_jsonresponse@37918c79]" started-at="2020-08-19T17:28:20Z" name="jsonresponse" finished-at="2020-08-19T17:28:20Z" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonresponse -->
      </class> <!-- apipackage.TC004_jsonresponse -->
      <class name="apipackage.TC006_Authorization">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC006_Authorization@5db250b4]" started-at="2020-08-19T17:28:17Z" name="logrecord" finished-at="2020-08-19T17:28:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="Authorization()[pri:0, instance:apipackage.TC006_Authorization@5db250b4]" started-at="2020-08-19T17:28:17Z" name="Authorization" finished-at="2020-08-19T17:28:19Z" duration-ms="1685" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [401]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at apipackage.TC006_Authorization.Authorization(TC006_Authorization.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Authorization -->
      </class> <!-- apipackage.TC006_Authorization -->
      <class name="apipackage.TC005_ExtractValues">
        <test-method is-config="true" signature="logrecord()[pri:0, instance:apipackage.TC005_ExtractValues@223f3642]" started-at="2020-08-19T17:28:19Z" name="logrecord" finished-at="2020-08-19T17:28:19Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logrecord -->
        <test-method signature="jsonresponse()[pri:0, instance:apipackage.TC005_ExtractValues@223f3642]" started-at="2020-08-19T17:28:19Z" name="jsonresponse" finished-at="2020-08-19T17:28:19Z" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonresponse -->
      </class> <!-- apipackage.TC005_ExtractValues -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
